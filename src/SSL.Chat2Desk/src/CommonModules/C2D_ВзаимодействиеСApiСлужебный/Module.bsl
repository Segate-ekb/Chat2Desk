////////////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции которые используются при взаимодействии с АПИ
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс
Функция ПолучитьПревьюСообщения(ДанныеСообщения) Экспорт
	Превью ="";
	Если ЗначениеЗаполнено(ДанныеСообщения.Получить("text")) Тогда
		Превью = ДанныеСообщения.Получить("text");
	ИначеЕсли ЗначениеЗаполнено(ДанныеСообщения.Получить("photo")) Тогда 
		Превью = "Картинка";
	ИначеЕсли ЗначениеЗаполнено(ДанныеСообщения.Получить("video")) Тогда 
		Превью = "Видео";
	ИначеЕсли ЗначениеЗаполнено(ДанныеСообщения.Получить("audio")) Тогда 
		Превью = "Аудиосообщение";	 
	Иначе
		Превью = "Не удалось получить превью."; 
	КонецЕсли;
	Возврат Превью;		
КонецФункции

Функция ПолучитьДвоичныеДанныеКартинки(Путь) экспорт
	Если не ЗначениеЗаполнено(Путь) Тогда
		Возврат БиблиотекаКартинок.c2d_Chat2Desk.ПолучитьДвоичныеДанные();
	КонецЕсли; 
	СтруктураАдреса = РазобратьАдресСайта(Путь);
	ssl = Новый ЗащищенноеСоединениеOpenSSL();
	Соединение = Новый HTTPСоединение(СтруктураАдреса.HTTPСервер,443,,,,,ssl);
	Запрос = Новый HTTPЗапрос(СтруктураАдреса.HTTPАдресСкрипта);
	Ответ = Соединение.Получить(Запрос);
	Возврат Ответ.ПолучитьТелоКакДвоичныеДанные();	
КонецФункции

Функция ДесериализоватьJSON(ЧтениеJSON) Экспорт
	СтруктураДанных = новый структура;
	Если ТипЗнч(ЧтениеJSON) = тип("Строка") Тогда
		Если не ЗначениеЗаполнено(ЧтениеJSON) Тогда
			Возврат СтруктураДанных;
		КонецЕсли; 
		СтрокаJSON = ЧтениеJSON;
		ЧтениеJSON=Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(СтрокаJSON);	
	КонецЕсли; 
	СтруктураДанных=ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();
	Возврат СтруктураДанных;
КонецФункции

Функция СериализоватьВJSON(СериализуемыйОбъект) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ЗаписьJSON.УстановитьСтроку();
	НастройкиСериализации = Новый НастройкиСериализацииJSON();
	НастройкиСериализации.СериализовыватьМассивыКакОбъекты = Ложь;
	ЗаписатьJSON(ЗаписьJSON, СериализуемыйОбъект); 
	СтрокаJSON = ЗаписьJSON.Закрыть();
		
	Возврат СтрокаJSON; 

КонецФункции 

Функция ПолучитьПредставлениеКлиента(ДанныеКлиента) Экспорт
ПредставлениеКлиента = "";
Если Не ЗначениеЗаполнено(ДанныеКлиента.Клиент) Тогда
	ПредставлениеКлиента = ?(ЗначениеЗаполнено(ДанныеКлиента.assigned_name),ДанныеКлиента.assigned_name,ДанныеКлиента.name) +"("+ДанныеКлиента.phone+")"; 
Иначе
	ПредставлениеКлиента = Строка(ДанныеКлиента.Клиент);
КонецЕсли;
Возврат ПредставлениеКлиента;
КонецФункции

Функция СформироватьТекстОшибки(Соответствие) экспорт
	Ошибки = Соответствие.Получить("errors");
		СтрокаОшибки = "";
		Для каждого  ТипОшибки из Ошибки  Цикл
			Для каждого ошибка Из ТипОшибки.значение Цикл
				СтрокаОшибки = СтрокаОшибки+ТипОшибки.ключ+":"+Ошибка+";"+Символы.ПС;  
			КонецЦикла; 
		КонецЦикла;	
		Возврат СтрокаОшибки;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция РазобратьАдресСайта(Знач АдресСайта) Экспорт
	
	АдресСайта = СокрЛП(АдресСайта); 
	
	HTTPСервер		 			= ""; 
	HTTPПорт					= 0;
	HTTPАдресСкрипта 			= "";
	HTTPЗащищенноеСоединение 	= Истина;
	
	Если ЗначениеЗаполнено(АдресСайта) Тогда
		
		АдресСайта = СтрЗаменить(АдресСайта, "\", "/");
		АдресСайта = СтрЗаменить(АдресСайта, " ", "");
		
		Если ВРег(Лев(АдресСайта, 7)) = "HTTP://" Тогда
			АдресСайта = Сред(АдресСайта, 8);
			HTTPЗащищенноеСоединение = Ложь;
		ИначеЕсли ВРег(Лев(АдресСайта, 8)) = "HTTPS://" Тогда
			АдресСайта = Сред(АдресСайта, 9);
		КонецЕсли;
		
		ПозицияСлэша = Найти(АдресСайта, "/");
		
		Если ПозицияСлэша > 0 Тогда
			HTTPСервер 		 = Лев(АдресСайта, ПозицияСлэша - 1);
			HTTPАдресСкрипта = Прав(АдресСайта, СтрДлина(АдресСайта) - ПозицияСлэша);
		Иначе	
			HTTPСервер 		 = АдресСайта;
			HTTPАдресСкрипта = "";
		КонецЕсли;	
		ПозицияДвоеточия = Найти(HTTPСервер, ":");
		Если ПозицияДвоеточия > 0 Тогда
			HTTPСерверСПортом = HTTPСервер;
			HTTPСервер		  = Лев(HTTPСерверСПортом, ПозицияДвоеточия - 1);
			HTTPПортСтрока 	  = Прав(HTTPСерверСПортом, СтрДлина(HTTPСерверСПортом) - ПозицияДвоеточия);
		Иначе
			HTTPПортСтрока = "0";
		КонецЕсли;
		
		HTTPПорт =Число(HTTPПортСтрока);
		
	КонецЕсли;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("HTTPСервер"	  			, HTTPСервер); 
	СтруктураРезультата.Вставить("HTTPПорт"		   			, HTTPПорт);
	СтруктураРезультата.Вставить("HTTPАдресСкрипта"			, HTTPАдресСкрипта);
	СтруктураРезультата.Вставить("HTTPЗащищенноеСоединение"	, HTTPЗащищенноеСоединение);
	
	Возврат СтруктураРезультата;
КонецФункции

#КонецОбласти