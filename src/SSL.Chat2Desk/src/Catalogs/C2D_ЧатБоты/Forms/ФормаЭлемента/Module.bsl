
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.КартаМаршрутаXML) Тогда
		ГрафическаяСхема = C2D_РаботаСГрафическимиСхемамиСервер.ПолучитьГрафическуюСхемуИзXML(Объект.КартаМаршрутаXML);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Объект.КартаМаршрутаXML = C2D_РаботаСГрафическимиСхемамиСервер.ПолучитьXMLГрафическойСхемы(ГрафическаяСхема);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийГрафическойСхемы

&НаКлиенте
Процедура ГрафическаяСхемаПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	ГрафическаяСхемаПриИзмененииНаСервере();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТочкиМаршрута


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ГрафическаяСхемаПриИзмененииНаСервере()
	//ОписаниеЭлементов = C2D_РаботаСГрафическимиСхемамиСервер.ПолучитьОписаниеЭлементовГрафическойСхемы();
	
	ИдентификаторыЭлементов = Новый Массив;
	
	// пример работы с DOM графической схемы
	ДокументDOM = C2D_РаботаСГрафическимиСхемамиСервер.ПолучитьDOMГрафическойСхемы(ГрафическаяСхема);
	
	// каждый элемент схемы "item" представлен свойством "itemType"
	СписокЭлементовDOM = ДокументDOM.ПолучитьЭлементыПоИмени("itemType");
	
	Для Каждого Элемент Из СписокЭлементовDOM Цикл
		
		ТипЭлемента = Число(Элемент.ТекстовоеСодержимое);
		
		Если ТипЭлемента = 0
			ИЛИ ТипЭлемента = 1 Тогда
			
			// декорации и линии пропускаем
			Продолжить;
			
		КонецЕсли;
		
		УзелТочкиМаршрута = Элемент.РодительскийУзел;
		
		// каждый элемент схемы имеет itemId
		ИдентификаторЭлемента = Число(C2D_РаботаСГрафическимиСхемамиСервер.ПолучитьЗначениеСвойстваЭлемента(УзелТочкиМаршрута, "itemId"));
		
		// заполняеем перечень текущих идентификаторов
		ИдентификаторыЭлементов.Добавить(ИдентификаторЭлемента);
		
		// находим, есть ли данный узел в точках маршрута
		ПараметрыОтбора = Новый Структура("ИдентификаторЭлемента", ИдентификаторЭлемента);
		
		РезультатПоиска = Объект.ТочкиМаршрута.НайтиСтроки(ПараметрыОтбора);
		
		Если РезультатПоиска.Количество() = 0 Тогда
			
			НоваяСтрока = Объект.ТочкиМаршрута.Добавить();
			
			НоваяСтрока.ИдентификаторЭлемента = ИдентификаторЭлемента;
			НоваяСтрока.ТипЭлемента = ТипЭлемента;
			//НоваяСтрока.ТипЭлементаПредставление = ОписаниеЭлементов[ТипЭлемента];
			НоваяСтрока.Наименование = C2D_РаботаСГрафическимиСхемамиСервер.ПолучитьЗначениеСвойстваЭлемента(УзелТочкиМаршрута, "content");
			
		КонецЕсли;
		
		// пример, код установки красной линии (текущее действие в запущенном БП)
		Если ТипЭлемента = 5 Тогда
			
			// данные свойства нашел опытным путем, может что и не так, но работает...
			C2D_РаботаСГрафическимиСхемамиСервер.УстановитьЗначениеСвойстваЭлемента(УзелТочкиМаршрута, "passageState", "2");
			C2D_РаботаСГрафическимиСхемамиСервер.УстановитьЗначениеСвойстваЭлемента(УзелТочкиМаршрута, "isAddrZoneDivideValid", "true");
			C2D_РаботаСГрафическимиСхемамиСервер.УстановитьЗначениеСвойстваЭлемента(УзелТочкиМаршрута, "addrZoneDivideYPos", "16");
			
		КонецЕсли;
		
	КонецЦикла;
	
	ГрафическаяСхема = C2D_РаботаСГрафическимиСхемамиСервер.ПолучитьГрафическуюСхемуИзDOM(ДокументDOM);
	
	// удалим из таблицы точек маршрута те элементы, которые удалили на схеме
	СтрокиКУдалению = Новый Массив;
	
	Для Каждого СтрокаТЧ Из Объект.ТочкиМаршрута Цикл
		
		Если ИдентификаторыЭлементов.Найти(СтрокаТЧ.ИдентификаторЭлемента) = Неопределено Тогда
			СтрокиКУдалению.Добавить(СтрокаТЧ);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из СтрокиКУдалению Цикл
		Объект.ТочкиМаршрута.Удалить(СтрокаТЧ);
	КонецЦикла;

	
КонецПроцедуры


#КонецОбласти
 