#Область ПрограммныйИнтерфейс
Функция ПолучитьIDПоследнегоСообщения() экспорт
	ID = 0;
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ЕСТЬNULL(C2D_Сообщения.Id, 0)) КАК Id
	               |ИЗ
	               |	РегистрСведений.C2D_Сообщения КАК C2D_Сообщения";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ID = Выборка.IdСообщения;
	КонецЕсли; 
Возврат ?(ЗначениеЗаполнено(ID),id,0)+1;
КонецФункции

Функция ПолучитьНовыеСообщения() Экспорт
		СтруктураПараметров = Новый Структура("start_id, type", РегистрыСведений.C2D_Сообщения.ПолучитьIDПоследнегоСообщения(),"from_client");
		СтруктураОтвет = C2D_ВзаимодействиеСApi.GET_messages(СтруктураПараметров);
		ОбновитьДанныеПоСообщениям(СтруктураОтвет.Получить("data"));	
КонецФункции

Процедура ЗаписатьИнформациюОНовомСообщении(Соответствие) Экспорт
	Запись = РегистрыСведений.C2D_Сообщения.СоздатьМенеджерЗаписи();
	Запись.ДатаСообщения = ТекущаяДата();
	Запись.Id = ?(не Соответствие.Получить("id") = неопределено,Соответствие.Получить("id"), Соответствие.Получить("message_id"));
	Запись.Текст = C2D_ВзаимодействиеСApiСлужебный.ПолучитьПревьюСообщения(Соответствие);
	Запись.dialog_id = Соответствие.Получить("dialog_id");
	Запись.type = Соответствие.Получить("type");
	Запись.Записать();
	
	Если ЗначениеЗаполнено(Соответствие.Получить("operator_id")) и Запись.type = "from_client" Тогда
		РегистрыСведений.C2D_ОповещенияОператоров.ОбновитьИнофрмациюОбОповещениях(Запись.Id, Соответствие.Получить("operator_id"));
	КонецЕсли;
КонецПроцедуры

//Возвращает ид последнего сообщения в диалоге
Функция НайтиПоследнееСообщениеВДиалоге(dialog_id) экспорт
	ID = Неопределено;
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	C2D_Сообщения.Id КАК Id
	               |ИЗ
	               |	РегистрСведений.C2D_Сообщения КАК C2D_Сообщения
	               |ГДЕ
	               |	C2D_Сообщения.dialog_id = &dialog_id
	               |	И C2D_Сообщения.type = ""from_client""
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Id УБЫВ";
	Запрос.УстановитьПараметр("dialog_id",dialog_id);
	Выборка = Запрос.Выполнить().Выбрать();
	Если выборка.Следующий() Тогда
		ID = выборка.Id
	КонецЕсли;
	Возврат ID;
КонецФункции


// Процедура - Очистить неиспользуемые сообщения
//Процедура удаляет все сообщения которые не пользуются в выборках. На них нет ссылок в регистре оповещений операторов, они не последние в диалоге.
Процедура ОчиститьНеиспользуемыеСообщения() Экспорт
		Запрос = Новый запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	МАКСИМУМ(C2D_Сообщения.Id) КАК message_id,
		               |	C2D_Диалоги.id КАК dialog_id
		               |ПОМЕСТИТЬ ПоследниеСообщения
		               |ИЗ
		               |	РегистрСведений.C2D_Диалоги КАК C2D_Диалоги
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.C2D_Сообщения КАК C2D_Сообщения
		               |		ПО C2D_Диалоги.id = C2D_Сообщения.dialog_id
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	C2D_Диалоги.id
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	C2D_Сообщения.Id КАК Id
		               |ИЗ
		               |	РегистрСведений.C2D_Сообщения КАК C2D_Сообщения
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСообщения КАК ПоследниеСообщения
		               |		ПО C2D_Сообщения.Id = ПоследниеСообщения.message_id
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.C2D_ОповещенияОператоров КАК C2D_ОповещенияОператоров
		               |		ПО C2D_Сообщения.Id = C2D_ОповещенияОператоров.IDСообщения
		               |ГДЕ
		               |	C2D_ОповещенияОператоров.IDСообщения ЕСТЬ NULL
		               |	И ПоследниеСообщения.message_id ЕСТЬ NULL";
		Выборка = запрос.Выполнить().Выгрузить();
		Для каждого стр Из  выборка Цикл
		Запись = РегистрыСведений.C2D_Сообщения.СоздатьМенеджерЗаписи();
		Запись.Id = стр.ID;
		запись.Прочитать();
		Запись.Удалить();
		КонецЦикла;		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ОбновитьДанныеПоСообщениям(МассивНовыхСообщений)
		Для каждого Сообщение Из МассивНовыхСообщений Цикл
			 ЗаписатьИнформациюОНовомСообщении(Сообщение);
		КонецЦикла;
КонецПроцедуры

#КонецОбласти