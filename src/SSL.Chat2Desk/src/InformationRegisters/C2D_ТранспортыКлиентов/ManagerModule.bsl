#Область ПрограммныйИнтерфейс
Процедура ДобавитьТранспортКлиенту(client_id, channel_id, transport) Экспорт
	Запись = РегистрыСведений.C2D_ТранспортыКлиентов.СоздатьМенеджерЗаписи();
	Запись.client_id = client_id;
	Запись.transport = Справочники.C2D_Transports.СоздатьПолучитьТранспорт(transport, channel_id);
	Запись.Записать();
КонецПроцедуры

Процедура ДобавитьТранспортыКлиенту (client_id, МассивКаналов) Экспорт
	Для каждого Канал Из МассивКаналов Цикл
		Если ЗначениеЗаполнено(Канал) Тогда
			channel_id = канал.получить("id");
			Для каждого Транспорт Из канал.Получить("transports") Цикл
				ДобавитьТранспортКлиенту(client_id,channel_id, Транспорт);
			КонецЦикла; 
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

// Функция - Получить возможные транспорты по клиенту
//
// Параметры:
//  СсылкаНаКлиента	 - любая Ссылка	 - ссылка по которой будет совершена попытка поиска доступных транспортов.
// 
// Возвращаемое значение:
//  массив -массив наименований транспортов
//
Функция ПолучитьВозможныеТранспортыПоКлиенту(СсылкаНаКлиента) экспорт
	//для начала найдем id по ссылке
	Массивclient_id = РегистрыСведений.C2D_Клиенты.НайтиIDПоСсылке(СсылкаНаКлиента);
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	C2D_ТранспортыКлиентов.transport КАК transport
	               |ИЗ
	               |	РегистрСведений.C2D_ТранспортыКлиентов КАК C2D_ТранспортыКлиентов
	               |ГДЕ
	               |	C2D_ТранспортыКлиентов.client_id В(&Массивclient_id)";
	Запрос.УстановитьПараметр("Массивclient_id", Массивclient_id);
	
	Возврат запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("transport");
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти