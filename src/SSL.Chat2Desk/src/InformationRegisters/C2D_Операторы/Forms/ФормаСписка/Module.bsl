#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	&НаКлиенте
Процедура ПользовательТекущейСтрокиПриИзменении(Элемент)
	ОбновитьПользователя(Элементы.список.текущиеДанные.id,ПользовательТекущейСтроки);
	Элементы.Список.Обновить();
КонецПроцедуры

	&НаКлиенте
Процедура ПарольТекущейСтрокиПриИзменении(Элемент)
	ОбновитьПароль(Элементы.список.текущиеДанные.id,ПарольТекущейСтроки);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СопоставленоОтборПриИзменении(Элемент)
		ОбработатьОтборЗаписейСопоставления();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПользовательТекущейСтроки = ТекущиеДанные.Пользователь;
	ПарольТекущейСтроки = ТекущиеДанные.Пароль;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОбновитьДанныеПоОператорам(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОбОбновлении", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Обнолвение данных по операторам может занять длительное время. Продолжить?",РежимДиалогаВопрос.ОКОтмена, 60);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервереБезКонтекста
Процедура ОбновитьПользователя(id, Пользователь)
	Запись = РегистрыСведений.C2D_Операторы.СоздатьМенеджерЗаписи();
	Запись.id = id;
	Запись.Прочитать();
	Если не Запись.Пользователь = Пользователь Тогда
		запись.Пользователь = Пользователь;
		Запись.Записать();	
	КонецЕсли; 	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьПароль(id, Пароль)
	Запись = РегистрыСведений.C2D_Операторы.СоздатьМенеджерЗаписи();
	Запись.id = id;
	Запись.Прочитать();
	Если не Запись.password = Пароль Тогда
		запись.password = Пароль;
		Запись.Записать();	
	КонецЕсли; 	
КонецПроцедуры


&НаКлиенте
Процедура ПослеОтветаНаВопросОбОбновлении(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если не РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		возврат;
	КонецЕсли; 
	ДлительнаяОперация = НачатьОбновлениеОператоровВФоне();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	Оповещение = Новый ОписаниеОповещения("ПослеЗавершенияОбновления",ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,Оповещение , ПараметрыОжидания);
КонецПроцедуры

&НаСервере
Функция НачатьОбновлениеОператоровВФоне()
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьВФоне("РегистрыСведений.C2D_Операторы.ОбновитьСписокОператоровВФоне", , ПараметрыВыполнения);
КонецФункции

&НаКлиенте
Процедура ПослеЗавершенияОбновления(Результат, ДополнительныеПараметры) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОбработатьОтборЗаписейСопоставления()
	
	Если СопоставленоОтбор = "Сопоставленные" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(список, "Пользователь",,ВидСравненияКомпоновкиДанных.Заполнено,,Истина);
	ИначеЕсли СопоставленоОтбор = "Несопоставленные" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(список, "Пользователь",,ВидСравненияКомпоновкиДанных.НеЗаполнено,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(список, "Пользователь",,,,Ложь);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти